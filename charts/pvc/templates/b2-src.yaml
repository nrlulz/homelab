apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {{ .Values.pvcName }}-volsync-b2
spec:
  secretStoreRef:
    name: bitwarden
    kind: ClusterSecretStore
  target:
    template:
      data:
        RESTIC_REPOSITORY: "s3:{{ `{{ .bucket }}` }}/{{ .Values.pvcName }}"
        RESTIC_PASSWORD: "{{ `{{ .RESTIC_PASSWORD }}` }}"
        AWS_ACCESS_KEY_ID: "{{ `{{ .AWS_ACCESS_KEY_ID }}` }}"
        AWS_SECRET_ACCESS_KEY: "{{ `{{ .AWS_SECRET_ACCESS_KEY }}` }}"
  data:
    - secretKey: bucket
      remoteRef:
        key: VOLSYNC_CLOUD_BUCKET_NAME
    - secretKey: RESTIC_PASSWORD
      remoteRef:
        key: VOLSYNC_RESTIC_PASSWORD
    - secretKey: AWS_ACCESS_KEY_ID
      remoteRef:
        key: VOLSYNC_CLOUD_ACCESS_KEY_ID
    - secretKey: AWS_SECRET_ACCESS_KEY
      remoteRef:
        key: VOLSYNC_CLOUD_SECRET_ACCESS_KEY

---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationSource
metadata:
  name: {{ .Values.pvcName }}-volsync-b2-src
spec:
  sourcePVC: {{ .Values.pvcName }}
  trigger:
    schedule: {{ if eq .Values.triggerSchedule.b2 "random" -}}
        {{- $triggerMinute := mod (randNumeric 2 | int64) 60 -}}
        {{- $triggerHour := mod (randNumeric 2 | int64) 24 -}}
        "{{ $triggerMinute }} {{ $triggerHour }} * * *"
      {{- else -}}
        {{ .Values.triggerSchedule.b2 | quote }}
      {{- end }}
  restic:
    copyMethod: Snapshot
    pruneIntervalDays: 7
    repository: "{{ .Values.pvcName }}-volsync-b2"
    volumeSnapshotClassName: {{ .Values.volumeSnapshotClassName }}
    cacheCapacity: {{ .Values.cacheCapacity }}
    cacheStorageClassName: {{ .Values.cacheStorageClassName }}
    cacheAccessModes: {{ .Values.cacheAccessModes }}
    storageClassName: {{ .Values.replicationStorageClassName }}
    accessModes: {{ .Values.accessModes }}
    moverSecurityContext: {{ .Values.moverSecurityContext | toYaml | nindent 6 }}
    retain: {{ .Values.snapshotRetention | toYaml | nindent 6 }}
