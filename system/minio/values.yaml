minio:
  mode: standalone
  environment:
    MINIO_STORAGE_CLASS_RRS: EC:0
    MINIO_STORAGE_CLASS_STANDARD: EC:0
    MINIO_UPDATE: "off"
  securityContext:
    runAsUser: 473
    runAsGroup: 473
    fsGroup: 473
    fsGroupChangePolicy: OnRootMismatch
  persistence:
    existingClaim: minio
  ingress:
    enabled: true
    ingressClassName: internal
    hosts:
      - s3.internal.neils.house
  consoleIngress:
    enabled: true
    ingressClassName: internal
    hosts:
      - minio.internal.neils.house
  buckets:
    - name: cloudnativepg
      policy: none
    - name: loki
      policy: none
    - name: volsync
      policy: none
  policies:
    - name: cloudnativepg-rw
      statements:
        - effect: Allow
          resources:
            - "arn:aws:s3:::cloudnativepg"
            - "arn:aws:s3:::cloudnativepg/*"
          actions:
            - "s3:*"
    - name: loki-rw
      statements:
        - effect: Allow
          resources:
            - "arn:aws:s3:::loki"
            - "arn:aws:s3:::loki/*"
          actions:
            - "s3:*"
    - name: volsync-rw
      statements:
        - effect: Allow
          resources:
            - "arn:aws:s3:::volsync"
            - "arn:aws:s3:::volsync/*"
          actions:
            - "s3:*"
  users:
    - accessKey: admin
      existingSecret: minio-admin-password
      existingSecretKey: password
      policy: consoleAdmin
    - accessKey: cloudnativepg
      existingSecret: minio-cloudnativepg-password
      existingSecretKey: password
      policy: cloudnativepg-rw
    - accessKey: loki
      existingSecret: minio-loki-password
      existingSecretKey: password
      policy: loki-rw
    - accessKey: volsync
      existingSecret: minio-volsync-password
      existingSecretKey: password
      policy: volsync-rw
